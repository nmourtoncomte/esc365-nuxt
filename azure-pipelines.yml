# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  vmImage: ubuntu-latest

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '14.x'
    displayName: 'InstallNode'

  - script: |
      yarn install --network-timeout 1000000
      yarn build
    displayName: 'YarnInstallThenBuild'

  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: |
        .nuxt/**
        static/**
        package.json
        nuxt.config.js
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/package.zip'
      replaceExistingArchive: true

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/package.zip'
      ArtifactName: 'drop'
      publishLocation: 'Container'

  - task: AzureRmWebAppDeployment@4
    inputs:
      ConnectionType: 'AzureRM'
      azureSubscription: 'azscdevops'
      appType: 'webAppLinux'
      WebAppName: 'azappesc365demot1'
      packageForLinux: '$(Build.ArtifactStagingDirectory)/package.zip'
      RuntimeStack: 'NODE|14-lts'
      StartupCommand: 'yarn install --network-timeout 1000000 && yarn start'

  - task: AzureAppServiceManage@0
    inputs:
      azureSubscription: 'azscdevops'
      Action: 'Restart Azure App Service'
      WebAppName: 'azappesc365demot1'
